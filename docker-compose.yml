version: '3.8'

services:
  # Service d'orchestration des LLMs
  llm-orchestrator:
    build: ./backend/microservices/llm-orchestrator
    container_name: hygie-llm-orchestrator
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - MONGODB_URI=mongodb://mongodb:27017/hygie
      - REDIS_HOST=redis
      - LOG_LEVEL=INFO
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend/microservices/llm-orchestrator/config:/app/config
      - llm-orchestrator-logs:/app/logs
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Service de gestion des patients
  patient-service:
    build: ./backend/microservices/patient-service
    container_name: hygie-patient-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - POSTGRES_HOST=postgresql
      - MONGODB_URI=mongodb://mongodb:27017/hygie
      - LOG_LEVEL=INFO
    depends_on:
      - postgresql
      - mongodb
    volumes:
      - ./backend/microservices/patient-service/config:/app/config
      - patient-service-logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Service d'analyse des médicaments
  medication-analysis:
    build: ./backend/microservices/medication-analysis
    container_name: hygie-medication-analysis
    ports:
      - "8082:8082"
    environment:
      - PYTHON_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/hygie
      - LLM_ORCHESTRATOR_URL=http://llm-orchestrator:8080
      - LOG_LEVEL=INFO
    depends_on:
      - mongodb
      - llm-orchestrator
    volumes:
      - ./backend/microservices/medication-analysis:/app
      - medication-analysis-logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Service d'authentification FastAPI
  auth_service:
    build: ./backend/auth_service
    ports:
      - "8004:8000" # port hôte pour debug
    environment:
      - MONGO_URL=mongodb://mongodb:27017/hygie
      - DB_NAME=hygie
      - AUTH_SECRET_KEY=hygie_secret_key
    depends_on:
      - mongodb

  # Service BMP FastAPI
  bmp_service:
    build: ./backend/bmp_service
    ports:
      - "8005:8000"
    environment:
      - AUTH_SECRET_KEY=hygie_secret_key
      - LLM_BASE_DIR=/models
    volumes:
      - C:/Users/ssebb/LLM:/models:ro

    depends_on:
      - mongodb
      - auth_service

  # Service de facturation
  billing-service:
    build: ./backend/microservices/billing-service
    container_name: hygie-billing-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - POSTGRES_HOST=postgresql
      - REDIS_HOST=redis
      - LOG_LEVEL=INFO
    depends_on:
      - postgresql
      - redis
    volumes:
      - ./backend/microservices/billing-service/config:/app/config
      - billing-service-logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Frontend React/Next.js
  frontend:
    build: ./frontend
    container_name: hygie-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - API_URL=http://api-gateway:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api-gateway

  # API Gateway
  api-gateway:
    image: nginx:alpine
    container_name: hygie-api-gateway
    ports:
      - "8000:8000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - llm-orchestrator
      - patient-service
      - medication-analysis
      - billing-service

  # Base de données PostgreSQL
  postgresql:
    image: postgres:14-alpine
    container_name: hygie-postgresql
    environment:
      - POSTGRES_USER=hygie
      - POSTGRES_PASSWORD=hygie_secure_password
      - POSTGRES_DB=hygie
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hygie"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Base de données MongoDB
  mongodb:
    image: mongo:6
    container_name: hygie-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=hygie
      - MONGO_INITDB_ROOT_PASSWORD=hygie_secure_password
      - MONGO_INITDB_DATABASE=hygie
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
      - ./database/mongo-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/hygie --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: hygie-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service de métriques et monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: hygie-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  # Service de visualisation des métriques
  grafana:
    image: grafana/grafana:latest
    container_name: hygie-grafana
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=hygie_secure_password
    depends_on:
      - prometheus

  # Vault pour la gestion des secrets
  vault:
    image: hashicorp/vault:latest
    container_name: hygie-vault
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=hygie-root-token
    cap_add:
      - IPC_LOCK
    volumes:
      - vault-data:/vault/data

volumes:
  postgres-data:
  mongodb-data:
  redis-data:
  prometheus-data:
  grafana-data:
  vault-data:
  llm-orchestrator-logs:
  patient-service-logs:
  medication-analysis-logs:
  billing-service-logs:
